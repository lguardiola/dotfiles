[alias]
  ci = commit
  co = checkout
  st = status
  it = !git init --initial-branch=main && git commit -m \"Initial commit\" --allow-empty
  clean = clean -fd
  ignore = update-index --assume-unchanged
  unignore = update-index --no-assume-unchanged
  shorty = status --short --branch
  amend = commit --amend
  please = push --force-with-lease
  prune = fetch --prune
  undo = reset --soft HEAD^
  stash-all = stash save --include-untracked
  last = log -1 HEAD
  glog = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  showtool = "!f() { git difftool $1^ $1; }; f"
  added = difftool --cached
  ctags = !.git/hooks/ctags

[apply]
  whitespace = nowarn

[branch]
  autosetuprebase = "always"
  autosetupmerge = "always"

# A nice little github-like colorful, split diff right in the console.
# via http://owen.cymru/github-style-diff-in-terminal-with-icdiff/
[color]
  ui = auto
  branch = auto
  diff = auto
  status = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
  whitespace = red reverse

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[core]
  excludesfile = ~/.gitignore
  autocrlf = input

[commit]
  gpgSign = false
  # "other people can trust that the changes you've made really were made by you"
  # https://help.github.com/articles/about-gpg/
  # https://git-scm.com/docs/git-config#git-config-commitgpgSign

[credential]
	helper = osxkeychain

[diff]
  tool = icdiff

[difftool]
  prompt = false

[difftool "icdiff"]
  cmd = /usr/local/bin/icdiff --line-numbers $LOCAL $REMOTE

[filter "lfs"]
  required = true
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process

[init]
	defaultBranch = main

[merge]
  # ff = only
  # I pretty much never mean to do a real merge, since I use a rebase workflow.
  # Note: this global option applies to all merges, including those done during a git pull
  # https://git-scm.com/docs/git-config#git-config-mergeff

  conflictstyle = diff3
  # Standard diff is two sets of final changes. This introduces the original text before each side's changes.
  # https://git-scm.com/docs/git-config#git-config-mergeconflictStyle

[pager]
  difftool = true

[pull]
  rebase = true

[push]
  default = simple
  # "push the current branch back to the branch whose changes are usually integrated into the current branch"
  # "refuse to push if the upstream branchâ€™s name is different from the local one"
  # https://git-scm.com/docs/git-config#git-config-pushdefault

  followTags = true
  # Because I get sick of telling git to do it manually
  # https://git-scm.com/docs/git-config#git-config-pushfollowTags

[rerere]
  enabled = true

[status]
  showUntrackedFiles = all
  # Sometimes a newly-added folder, since it's only one line in git status, can slip under the radar.
  # https://git-scm.com/docs/git-config#git-config-statusshowUntrackedFiles

[transfer]
  fsckobjects = true
  # To combat repository corruption!
  # Note: this global option applies during receive and transmit
  # https://git-scm.com/docs/git-config#git-config-transferfsckObjects
  # via https://groups.google.com/forum/#!topic/binary-transparency/f-BI4o8HZW0

[user]
  name = Luis E. Guardiola
  email = lguardiola@gmail.com
